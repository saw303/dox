/*
 * Copyright 2012 Silvio Wangler (silvio.wangler@gmail.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



allprojects {

    apply plugin: 'idea'

    group = 'ch.silviowangler.dox'
    version = '0.1-SNAPSHOT'

    project.ext {
        springVersion = '3.2.0.M1'
        springDataVersion = '1.1.0.RELEASE'
        springSecurityVersion = '3.1.2.RELEASE'
        hibernateVersion = '4.1.6.Final'
        slf4jVersion = '1.6.6'
        logbackVersion = '1.0.6'
        junitVersion = '4.10'
        tilesVersion = '2.2.2'
        commonsIOVersion = '2.4'
        commonsCodecVersion = '1.6'
        commonsBeanUtilsVersion = '1.8.3'
        jodaTimeVersion = '2.1'
        h2Version = '1.3.168'
        iTextVersion = '5.3.1'
    }
}

subprojects {
    apply plugin: 'java'

    sourceCompatibility = 1.6
    targetCompatibility = 1.6

    configurations {
        all*.exclude group: 'commons-logging', module: 'commons-logging'
    }

    repositories {
        mavenCentral()
        maven {
            url 'https://repository.jboss.org/nexus/content/groups/public'
            url 'http://repo.springsource.org/libs-milestone'
            url 'http://repo.springsource.org/libs-snapshot'
        }
    }

    dependencies {
        compile "org.slf4j:slf4j-api:${ext.slf4jVersion}"
        testCompile "junit:junit:${ext.junitVersion}", 'org.mockito:mockito-all:1.9.0'
    }

    jar {
        manifest {
            attributes('Implementation-Title': "DOX : ${project.name}", 'Implementation-Version': project.version)
        }
    }
}

project(':api') {
    dependencies {
        compile "joda-time:joda-time:${ext.jodaTimeVersion}"
    }

}


project(':core') {
    dependencies {
        compile project(':api'), project(':domain'),
                "org.springframework:spring-context:${ext.springVersion}",
                "org.springframework.security:spring-security-core:${ext.springSecurityVersion}",
                "commons-codec:commons-codec:${ext.commonsCodecVersion}",
                "com.itextpdf:itextpdf:${ext.iTextVersion}",
                "commons-beanutils:commons-beanutils:${ext.commonsBeanUtilsVersion}",
                "commons-io:commons-io:${ext.commonsIOVersion}",
                "joda-time:joda-time:${ext.jodaTimeVersion}"
        runtime "org.slf4j:jcl-over-slf4j:${ext.slf4jVersion}", "ch.qos.logback:logback-classic:${ext.logbackVersion}"
    }
}

project(':domain') {
    dependencies {
        compile project(':api'),
                "org.hibernate:hibernate-core:${ext.hibernateVersion}",
                "org.hibernate:hibernate-entitymanager:${ext.hibernateVersion}"
        compile("org.springframework.data:spring-data-jpa:${ext.springDataVersion}") {
            exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
        }
        compile "joda-time:joda-time:${ext.jodaTimeVersion}"
    }
}

project(':functional-tests') {
    dependencies {
        testCompile project(':core'), "org.springframework:spring-test:${ext.springVersion}", "commons-io:commons-io:${ext.commonsIOVersion}"
        runtime "ch.qos.logback:logback-classic:${ext.logbackVersion}", "com.h2database:h2:${ext.h2Version}"
    }
}

project(':web') {
    apply plugin: 'war'

    war.archiveName = "dox-${version}.war"

    dependencies {
        compile project(':api')
        compile "org.springframework:spring-webmvc:${ext.springVersion}"
        testCompile "org.springframework:spring-test:${ext.springVersion}"
        compile 'org.springframework.mobile:spring-mobile-device:1.0.0.RELEASE'
        runtime 'javax.servlet:jstl:1.2'
        compile 'javax.servlet.jsp:jsp-api:2.1'
        compile 'javax.servlet:javax.servlet-api:3.0.1'
        runtime "org.apache.tiles:tiles-core:${ext.tilesVersion}"
        runtime "org.apache.tiles:tiles-servlet:${ext.tilesVersion}"
        runtime "org.apache.tiles:tiles-jsp:${ext.tilesVersion}"
        runtime "org.apache.tiles:tiles-template:${ext.tilesVersion}"
        runtime "ch.qos.logback:logback-access:${ext.logbackVersion}"
        runtime "com.h2database:h2:${ext.h2Version}"
    }
}