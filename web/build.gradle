buildscript {
    repositories {
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}"
    }
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')

    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('org.springframework.boot:spring-boot-devtools')

    compile "org.springframework.boot:spring-boot-starter-logging"
    compile('org.springframework.boot:spring-boot-starter-security')


    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')


    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    runtime('com.h2database:h2')

    compile project(':core')
}

test {
    exclude '**/*IntegrationTest.class'
}

task integrationTest(type: Test) {
    include '**/*IntegrationTest.class'
    reports.html.setDestination(file("${reports.html.destination}/integration"))
    reports.junitXml.setDestination(file("${reports.junitXml.destination}/integration"))

    systemProperty 'spring.profiles.active', 'test'
    environment 'DOX_STORE', System.properties['java.io.tmpdir']

    doFirst {
        def doxStore = System.getenv('DOX_STORE')

        if (!doxStore) doxStore = System.properties['java.io.tmpdir']

        def thumbnailDir = new File(doxStore, 'thumbnails')

        final thumbnailDirExists = thumbnailDir.exists()
        logger.info("File ${thumbnailDir.absolutePath} exists? ${thumbnailDirExists}")

        if (!thumbnailDirExists) {
            assert thumbnailDir.mkdir()
        }
    }
}

check.dependsOn integrationTest